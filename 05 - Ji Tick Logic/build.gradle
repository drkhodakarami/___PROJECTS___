plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version

base {
	archivesName = "${project.archives_base_name}"
}

repositories {
	mavenCentral()
    maven { url 'https://maven.fabricmc.net/' }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://repo.repsy.io/mvn/jiraiyah/jilibs' }
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Sub Project Dependency ========================================================================================================================
	
	// Ji Lib Mods Dependency ========================================================================================================================
    modImplementation include("jiraiyah.base:jibase:${jibase_version}")
    modImplementation include("jiraiyah.logger:jilogger:${jilogger_version}")
    modImplementation include("jiraiyah.reference:jireference:${jireference_version}")
    //modImplementation include("jiraiyah.config:jiconfig:${jiconfig_version}")
    //modImplementation include("jiraiyah.register:jiregister:${jiregister_version}")
	//modImplementation include("jiraiyah.jiralib:jiralib:${jiralib_version}")
	//modImplementation include("jiraiyah.inventory:jinventory:${jinventory_version}")
	//modImplementation include("jiraiyah.fluid:jifluid:${jifluid_version}")
	//modImplementation include("jiraiyah.energy:jienergy:${jienergy_version}")
	//modImplementation include("jiraiyah.machina:jimachina:${jimachina_version}")

    // Energy API Handling Dependency ================================================================================================================
	//include modApi("teamreborn:energy:${rootProject.energy_version}") {
	//	exclude(group: "net.fabricmc.fabric-api")
	//}
}

processResources {
    inputs.property "version", rootProject.mod_version
    inputs.property "loader_ver", rootProject.loader_version
    inputs.property "game_ver", rootProject.minecraft_version
    inputs.property "java_ver", rootProject.java_version
    inputs.property "mod_id", project.mod_id

    filesMatching("fabric.mod.json") {
        expand "version": rootProject.mod_version,
                "loader_ver": rootProject.loader_version,
                "game_ver": rootProject.minecraft_version,
                "java_ver": rootProject.java_version,
                "mod_id": project.mod_id
    }

    filesMatching("${project.mod_id}.mixins.json") {
        expand "java_ver": rootProject.java_version
    }
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            from components.java

            groupId = project.maven_group
            artifactId = project.maven_artifact
            version = rootProject.mod_version
        }
    }

    repositories {
    }
}